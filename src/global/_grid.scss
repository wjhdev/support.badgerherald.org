@use 'sass:math';

$colWidth: 70;
$gutterWidth: 14;

body {
  --columnWidth: #{$colWidth};
  --gutterWidth: #{$gutterWidth};
}

@function pageWidth($cols: 1) {
  @return (($colWidth * $cols) + ($gutterWidth * ($cols - 1)));
}

/***
 * Grid Values
 */
@function columnWidths($count) {
  @return '\(var(--columnWidth) * #{$count}\)';
}

@function gutterWidths($count) {
  @return '\(var(--gutterWidth) * #{$count}\)';
}

@function containerWidth($cols, $additionalGutter: 0) {
  $gutter: '\(#{$cols} - 1 + #{$additionalGutter}\)';
  @return '\(#{columnWidths($cols)} + #{gutterWidths(#{$gutter})}\)';
}

@function colRatio($cols) {
  @return '\(\(#{containerWidth($cols)}\) / \(#{containerWidth(var(--breakpointColumns),var(--additionalGutter))}\)\)';
}

@function gutterRatio($count) {
  @return '\(\(#{gutterWidths($count)}\) / \(#{containerWidth(var(--breakpointColumns),var(--additionalGutter))}\)\)';
}

@function col($col, $additionalGutter: 0) {
  @return calc(
    100% * (#{colRatio($col) + ' + ' + gutterRatio($additionalGutter)})
  );
}

@function gutter($count: 1) {
  @return calc(100% * #{(gutterRatio($count))});
}

@mixin setCol($col, $additionalGutter: 0, $absolute: false) {
  & *,
  &:after,
  &:before {
    --breakpointColumns: #{$col};
    --additionalGutter: #{$additionalGutter};
  }
  width: col($col, $additionalGutter);
  @if $absolute {
    position: absolute;
  } @else {
    position: relative;
  }
}

@mixin resetCol() {
  & > *,
  &:after,
  &:before {
    --breakpointColumns: unset;
    --additionalGutter: unset;
  }
}

@mixin setGrid($columnCount, $additionalGutter: 0) {
  --breakpointColumns: #{$columnCount};
  --additionalGutter: #{$additionalGutter};
  @include setCol($columnCount, $additionalGutter);
}

/***
 * Breakpoint
 */
@mixin breakpoint($breakpoint, $extra: 0) {
  @if $breakpoint == 'mobile-stretch' {
    @media (min-width: (pageWidth(4.5) + $extra) + 'px') {
      @content;
    }
  } @else if $breakpoint == 'mobilexl' {
    @media (min-width: (pageWidth(6) + $extra) + 'px') {
      @content;
    }
  } @else if $breakpoint == 'mobilexl-stretch' {
    @media (min-width: (pageWidth(7.5) + $extra) + 'px') {
      @content;
    }
  } @else if $breakpoint == 'tablet' {
    @media (min-width: (pageWidth(9) + 50 + $extra) + 'px') {
      @content;
    }
  } @else if $breakpoint == 'tablet-stretch' {
    @media (min-width: (pageWidth(10.5) + 50 + $extra) + 'px') {
      @content;
    }
  } @else if $breakpoint == 'desktop' {
    @media (min-width: (pageWidth(12) + 100 + $extra) + 'px') {
      @content;
    }
  } @else if $breakpoint == 'desktop-stretch' {
    @media (min-width: (pageWidth(13.5) + 100 + $extra) + 'px') {
      @content;
    }
  } @else if $breakpoint == 'xl' {
    @media (min-width: (pageWidth(15) + 100 + $extra) + 'px') {
      @content;
    }
  } @else if $breakpoint == 'xl-stretch' {
    @media (min-width: (pageWidth(17.5) + 100 + $extra) + 'px') {
      @content;
    }
  }

  @if $breakpoint == 'mobile-and-below' {
    @media (max-width: (pageWidth(6) - 1 + $extra) + 'px') {
      @content;
    }
  } @else if $breakpoint == 'mobilexl-and-below' {
    @media (max-width: (pageWidth(9) - 1 + 50 + $extra) + 'px') {
      @content;
    }
  } @else if $breakpoint == 'tablet-and-below' {
    @media (max-width: (pageWidth(12) - 1 + 100 + $extra) + 'px') {
      @content;
    }
  } @else if $breakpoint == 'desktop-and-below' {
    @media (max-width: (pageWidth(15) - 1 + 100 + $extra) + 'px') {
      @content;
    }
  }
}
